#############################################################################
# Makefile for building: fp4
# Generated by qmake (2.01a) (Qt 4.8.2) on: Wed Jan 29 16:17:01 2014
# Project:  fp4.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile fp4.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++0x -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lasound -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		fp4win.cpp \
		fp4effect.cpp \
		fp4instr.cpp \
		fp4hw.cpp \
		instrumentwidget.cpp \
		controllerwidget.cpp \
		fp4qt.cpp \
		fp4controller.cpp \
		midibindbutton.cpp \
		controllerbinding.cpp \
		autoconnectwidget.cpp \
		gssendwidget.cpp \
		bindingmanagerwidget.cpp \
		splitswindow.cpp \
		keyboardwidget.cpp \
		keyboardrangewidget.cpp \
		musictheory.cpp \
		channeltransform.cpp \
		channelswindow.cpp \
		controllergeneratorwindow.cpp \
		fp4managerapplication.cpp \
		performancewindow.cpp \
		keyboardrangeeditdialog.cpp \
		instrumentselectdialog.cpp \
		window.cpp \
		preferences.cpp \
		preferenceswindow.cpp \
		themeicon.cpp \
		resetbutton.cpp \
		reverbwidget.cpp \
		parameterswidget.cpp \
		choruswidget.cpp \
		parameterwidgetbuilder.cpp \
		effectwidget.cpp \
		masterwidget.cpp \
		abstractcontrollerswidget.cpp \
		pedalswidget.cpp \
		soundparameterswidget.cpp \
		vibratowidget.cpp \
		portamentowidget.cpp \
		sendswidget.cpp \
		pitchwidget.cpp \
		channelpressuregenerator.cpp \
		controllergenerator.cpp \
		controllerkeysgenerator.cpp \
		keytimegenerator.cpp \
		voicinggenerator.cpp \
		chordselecterdialog.cpp moc_fp4win.cpp \
		moc_instrumentwidget.cpp \
		moc_controllerwidget.cpp \
		moc_fp4qt.cpp \
		moc_midibindbutton.cpp \
		moc_autoconnectwidget.cpp \
		moc_gssendwidget.cpp \
		moc_bindingmanagerwidget.cpp \
		moc_splitswindow.cpp \
		moc_keyboardwidget.cpp \
		moc_keyboardrangewidget.cpp \
		moc_channeltransform.cpp \
		moc_channelswindow.cpp \
		moc_controllergeneratorwindow.cpp \
		moc_fp4managerapplication.cpp \
		moc_performancewindow.cpp \
		moc_keyboardrangeeditdialog.cpp \
		moc_instrumentselectdialog.cpp \
		moc_window.cpp \
		moc_preferences.cpp \
		moc_preferenceswindow.cpp \
		moc_resetbutton.cpp \
		moc_reverbwidget.cpp \
		moc_parameterswidget.cpp \
		moc_choruswidget.cpp \
		moc_effectwidget.cpp \
		moc_masterwidget.cpp \
		moc_abstractcontrollerswidget.cpp \
		moc_pedalswidget.cpp \
		moc_soundparameterswidget.cpp \
		moc_vibratowidget.cpp \
		moc_portamentowidget.cpp \
		moc_sendswidget.cpp \
		moc_pitchwidget.cpp \
		moc_channelpressuregenerator.cpp \
		moc_controllergenerator.cpp \
		moc_controllerkeysgenerator.cpp \
		moc_keytimegenerator.cpp \
		moc_voicinggenerator.cpp \
		moc_chordselecterdialog.cpp \
		qrc_resources.cpp
OBJECTS       = main.o \
		fp4win.o \
		fp4effect.o \
		fp4instr.o \
		fp4hw.o \
		instrumentwidget.o \
		controllerwidget.o \
		fp4qt.o \
		fp4controller.o \
		midibindbutton.o \
		controllerbinding.o \
		autoconnectwidget.o \
		gssendwidget.o \
		bindingmanagerwidget.o \
		splitswindow.o \
		keyboardwidget.o \
		keyboardrangewidget.o \
		musictheory.o \
		channeltransform.o \
		channelswindow.o \
		controllergeneratorwindow.o \
		fp4managerapplication.o \
		performancewindow.o \
		keyboardrangeeditdialog.o \
		instrumentselectdialog.o \
		window.o \
		preferences.o \
		preferenceswindow.o \
		themeicon.o \
		resetbutton.o \
		reverbwidget.o \
		parameterswidget.o \
		choruswidget.o \
		parameterwidgetbuilder.o \
		effectwidget.o \
		masterwidget.o \
		abstractcontrollerswidget.o \
		pedalswidget.o \
		soundparameterswidget.o \
		vibratowidget.o \
		portamentowidget.o \
		sendswidget.o \
		pitchwidget.o \
		channelpressuregenerator.o \
		controllergenerator.o \
		controllerkeysgenerator.o \
		keytimegenerator.o \
		voicinggenerator.o \
		chordselecterdialog.o \
		moc_fp4win.o \
		moc_instrumentwidget.o \
		moc_controllerwidget.o \
		moc_fp4qt.o \
		moc_midibindbutton.o \
		moc_autoconnectwidget.o \
		moc_gssendwidget.o \
		moc_bindingmanagerwidget.o \
		moc_splitswindow.o \
		moc_keyboardwidget.o \
		moc_keyboardrangewidget.o \
		moc_channeltransform.o \
		moc_channelswindow.o \
		moc_controllergeneratorwindow.o \
		moc_fp4managerapplication.o \
		moc_performancewindow.o \
		moc_keyboardrangeeditdialog.o \
		moc_instrumentselectdialog.o \
		moc_window.o \
		moc_preferences.o \
		moc_preferenceswindow.o \
		moc_resetbutton.o \
		moc_reverbwidget.o \
		moc_parameterswidget.o \
		moc_choruswidget.o \
		moc_effectwidget.o \
		moc_masterwidget.o \
		moc_abstractcontrollerswidget.o \
		moc_pedalswidget.o \
		moc_soundparameterswidget.o \
		moc_vibratowidget.o \
		moc_portamentowidget.o \
		moc_sendswidget.o \
		moc_pitchwidget.o \
		moc_channelpressuregenerator.o \
		moc_controllergenerator.o \
		moc_controllerkeysgenerator.o \
		moc_keytimegenerator.o \
		moc_voicinggenerator.o \
		moc_chordselecterdialog.o \
		qrc_resources.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		fp4.pro
QMAKE_TARGET  = fp4
DESTDIR       = 
TARGET        = fp4

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: fp4.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile fp4.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile fp4.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/fp41.0.0 || $(MKDIR) .tmp/fp41.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/fp41.0.0/ && $(COPY_FILE) --parents fp4win.h fp4effect.h fp4instr.h fp4fxlist.h fp4hw.h config.h instrumentwidget.h controllerwidget.h fp4qt.h fp4controller.h midibindbutton.h controllerbinding.h autoconnectwidget.h gssendwidget.h bindingmanagerwidget.h splitswindow.h keyboardwidget.h keyboardrangewidget.h musictheory.h channeltransform.h channelswindow.h controllergeneratorwindow.h fp4managerapplication.h fp4constants.h performancewindow.h keyboardrangeeditdialog.h instrumentselectdialog.h window.h preferences.h preferenceswindow.h themeicon.h resetbutton.h reverbwidget.h parameterswidget.h choruswidget.h parameterwidgetbuilder.h effectwidget.h masterwidget.h abstractcontrollerswidget.h pedalswidget.h soundparameterswidget.h vibratowidget.h portamentowidget.h sendswidget.h pitchwidget.h channelpressuregenerator.h controllergenerator.h controllerkeysgenerator.h keytimegenerator.h voicinggenerator.h chordselecterdialog.h .tmp/fp41.0.0/ && $(COPY_FILE) --parents resources.qrc .tmp/fp41.0.0/ && $(COPY_FILE) --parents main.cpp fp4win.cpp fp4effect.cpp fp4instr.cpp fp4hw.cpp instrumentwidget.cpp controllerwidget.cpp fp4qt.cpp fp4controller.cpp midibindbutton.cpp controllerbinding.cpp autoconnectwidget.cpp gssendwidget.cpp bindingmanagerwidget.cpp splitswindow.cpp keyboardwidget.cpp keyboardrangewidget.cpp musictheory.cpp channeltransform.cpp channelswindow.cpp controllergeneratorwindow.cpp fp4managerapplication.cpp performancewindow.cpp keyboardrangeeditdialog.cpp instrumentselectdialog.cpp window.cpp preferences.cpp preferenceswindow.cpp themeicon.cpp resetbutton.cpp reverbwidget.cpp parameterswidget.cpp choruswidget.cpp parameterwidgetbuilder.cpp effectwidget.cpp masterwidget.cpp abstractcontrollerswidget.cpp pedalswidget.cpp soundparameterswidget.cpp vibratowidget.cpp portamentowidget.cpp sendswidget.cpp pitchwidget.cpp channelpressuregenerator.cpp controllergenerator.cpp controllerkeysgenerator.cpp keytimegenerator.cpp voicinggenerator.cpp chordselecterdialog.cpp .tmp/fp41.0.0/ && (cd `dirname .tmp/fp41.0.0` && $(TAR) fp41.0.0.tar fp41.0.0 && $(COMPRESS) fp41.0.0.tar) && $(MOVE) `dirname .tmp/fp41.0.0`/fp41.0.0.tar.gz . && $(DEL_FILE) -r .tmp/fp41.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_fp4win.cpp moc_instrumentwidget.cpp moc_controllerwidget.cpp moc_fp4qt.cpp moc_midibindbutton.cpp moc_autoconnectwidget.cpp moc_gssendwidget.cpp moc_bindingmanagerwidget.cpp moc_splitswindow.cpp moc_keyboardwidget.cpp moc_keyboardrangewidget.cpp moc_channeltransform.cpp moc_channelswindow.cpp moc_controllergeneratorwindow.cpp moc_fp4managerapplication.cpp moc_performancewindow.cpp moc_keyboardrangeeditdialog.cpp moc_instrumentselectdialog.cpp moc_window.cpp moc_preferences.cpp moc_preferenceswindow.cpp moc_resetbutton.cpp moc_reverbwidget.cpp moc_parameterswidget.cpp moc_choruswidget.cpp moc_effectwidget.cpp moc_masterwidget.cpp moc_abstractcontrollerswidget.cpp moc_pedalswidget.cpp moc_soundparameterswidget.cpp moc_vibratowidget.cpp moc_portamentowidget.cpp moc_sendswidget.cpp moc_pitchwidget.cpp moc_channelpressuregenerator.cpp moc_controllergenerator.cpp moc_controllerkeysgenerator.cpp moc_keytimegenerator.cpp moc_voicinggenerator.cpp moc_chordselecterdialog.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_fp4win.cpp moc_instrumentwidget.cpp moc_controllerwidget.cpp moc_fp4qt.cpp moc_midibindbutton.cpp moc_autoconnectwidget.cpp moc_gssendwidget.cpp moc_bindingmanagerwidget.cpp moc_splitswindow.cpp moc_keyboardwidget.cpp moc_keyboardrangewidget.cpp moc_channeltransform.cpp moc_channelswindow.cpp moc_controllergeneratorwindow.cpp moc_fp4managerapplication.cpp moc_performancewindow.cpp moc_keyboardrangeeditdialog.cpp moc_instrumentselectdialog.cpp moc_window.cpp moc_preferences.cpp moc_preferenceswindow.cpp moc_resetbutton.cpp moc_reverbwidget.cpp moc_parameterswidget.cpp moc_choruswidget.cpp moc_effectwidget.cpp moc_masterwidget.cpp moc_abstractcontrollerswidget.cpp moc_pedalswidget.cpp moc_soundparameterswidget.cpp moc_vibratowidget.cpp moc_portamentowidget.cpp moc_sendswidget.cpp moc_pitchwidget.cpp moc_channelpressuregenerator.cpp moc_controllergenerator.cpp moc_controllerkeysgenerator.cpp moc_keytimegenerator.cpp moc_voicinggenerator.cpp moc_chordselecterdialog.cpp
moc_fp4win.cpp: preferences.h \
		fp4win.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) fp4win.h -o moc_fp4win.cpp

moc_instrumentwidget.cpp: instrumentwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) instrumentwidget.h -o moc_instrumentwidget.cpp

moc_controllerwidget.cpp: window.h \
		controllerwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) controllerwidget.h -o moc_controllerwidget.cpp

moc_fp4qt.cpp: fp4hw.h \
		fp4qt.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) fp4qt.h -o moc_fp4qt.cpp

moc_midibindbutton.cpp: midibindbutton.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) midibindbutton.h -o moc_midibindbutton.cpp

moc_autoconnectwidget.cpp: window.h \
		fp4hw.h \
		autoconnectwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) autoconnectwidget.h -o moc_autoconnectwidget.cpp

moc_gssendwidget.cpp: window.h \
		gssendwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gssendwidget.h -o moc_gssendwidget.cpp

moc_bindingmanagerwidget.cpp: fp4qt.h \
		fp4hw.h \
		window.h \
		bindingmanagerwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) bindingmanagerwidget.h -o moc_bindingmanagerwidget.cpp

moc_splitswindow.cpp: fp4qt.h \
		fp4hw.h \
		window.h \
		splitswindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) splitswindow.h -o moc_splitswindow.cpp

moc_keyboardwidget.cpp: keyboardwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) keyboardwidget.h -o moc_keyboardwidget.cpp

moc_keyboardrangewidget.cpp: keyboardrangewidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) keyboardrangewidget.h -o moc_keyboardrangewidget.cpp

moc_channeltransform.cpp: channeltransform.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) channeltransform.h -o moc_channeltransform.cpp

moc_channelswindow.cpp: window.h \
		channelswindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) channelswindow.h -o moc_channelswindow.cpp

moc_controllergeneratorwindow.cpp: window.h \
		controllergeneratorwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) controllergeneratorwindow.h -o moc_controllergeneratorwindow.cpp

moc_fp4managerapplication.cpp: fp4managerapplication.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) fp4managerapplication.h -o moc_fp4managerapplication.cpp

moc_performancewindow.cpp: window.h \
		performancewindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) performancewindow.h -o moc_performancewindow.cpp

moc_keyboardrangeeditdialog.cpp: keyboardrangeeditdialog.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) keyboardrangeeditdialog.h -o moc_keyboardrangeeditdialog.cpp

moc_instrumentselectdialog.cpp: instrumentselectdialog.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) instrumentselectdialog.h -o moc_instrumentselectdialog.cpp

moc_window.cpp: window.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) window.h -o moc_window.cpp

moc_preferences.cpp: preferences.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) preferences.h -o moc_preferences.cpp

moc_preferenceswindow.cpp: window.h \
		preferenceswindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) preferenceswindow.h -o moc_preferenceswindow.cpp

moc_resetbutton.cpp: resetbutton.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) resetbutton.h -o moc_resetbutton.cpp

moc_reverbwidget.cpp: parameterswidget.h \
		reverbwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) reverbwidget.h -o moc_reverbwidget.cpp

moc_parameterswidget.cpp: parameterswidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) parameterswidget.h -o moc_parameterswidget.cpp

moc_choruswidget.cpp: parameterswidget.h \
		choruswidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) choruswidget.h -o moc_choruswidget.cpp

moc_effectwidget.cpp: parameterswidget.h \
		fp4effect.h \
		effectwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) effectwidget.h -o moc_effectwidget.cpp

moc_masterwidget.cpp: parameterswidget.h \
		masterwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) masterwidget.h -o moc_masterwidget.cpp

moc_abstractcontrollerswidget.cpp: parameterswidget.h \
		abstractcontrollerswidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) abstractcontrollerswidget.h -o moc_abstractcontrollerswidget.cpp

moc_pedalswidget.cpp: abstractcontrollerswidget.h \
		parameterswidget.h \
		pedalswidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) pedalswidget.h -o moc_pedalswidget.cpp

moc_soundparameterswidget.cpp: abstractcontrollerswidget.h \
		parameterswidget.h \
		soundparameterswidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) soundparameterswidget.h -o moc_soundparameterswidget.cpp

moc_vibratowidget.cpp: abstractcontrollerswidget.h \
		parameterswidget.h \
		vibratowidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) vibratowidget.h -o moc_vibratowidget.cpp

moc_portamentowidget.cpp: abstractcontrollerswidget.h \
		parameterswidget.h \
		portamentowidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) portamentowidget.h -o moc_portamentowidget.cpp

moc_sendswidget.cpp: abstractcontrollerswidget.h \
		parameterswidget.h \
		sendswidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) sendswidget.h -o moc_sendswidget.cpp

moc_pitchwidget.cpp: parameterswidget.h \
		pitchwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) pitchwidget.h -o moc_pitchwidget.cpp

moc_channelpressuregenerator.cpp: controllergenerator.h \
		channelpressuregenerator.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) channelpressuregenerator.h -o moc_channelpressuregenerator.cpp

moc_controllergenerator.cpp: controllergenerator.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) controllergenerator.h -o moc_controllergenerator.cpp

moc_controllerkeysgenerator.cpp: controllergenerator.h \
		controllerkeysgenerator.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) controllerkeysgenerator.h -o moc_controllerkeysgenerator.cpp

moc_keytimegenerator.cpp: controllergenerator.h \
		keytimegenerator.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) keytimegenerator.h -o moc_keytimegenerator.cpp

moc_voicinggenerator.cpp: controllergenerator.h \
		voicinggenerator.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) voicinggenerator.h -o moc_voicinggenerator.cpp

moc_chordselecterdialog.cpp: chordselecterdialog.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) chordselecterdialog.h -o moc_chordselecterdialog.cpp

compiler_rcc_make_all: qrc_resources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_resources.cpp
qrc_resources.cpp: resources.qrc \
		midi-plug.png \
		piano.png \
		right-arrow.png \
		edit-undo.png
	/usr/bin/rcc -name resources resources.qrc -o qrc_resources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

main.o: main.cpp config.h \
		fp4win.h \
		preferences.h \
		fp4managerapplication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

fp4win.o: fp4win.cpp config.h \
		fp4win.h \
		preferences.h \
		fp4qt.h \
		fp4hw.h \
		fp4instr.h \
		instrumentwidget.h \
		effectwidget.h \
		parameterswidget.h \
		fp4effect.h \
		reverbwidget.h \
		choruswidget.h \
		masterwidget.h \
		controllerwidget.h \
		window.h \
		preferenceswindow.h \
		autoconnectwidget.h \
		channelswindow.h \
		gssendwidget.h \
		bindingmanagerwidget.h \
		performancewindow.h \
		splitswindow.h \
		fp4constants.h \
		fp4managerapplication.h \
		themeicon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fp4win.o fp4win.cpp

fp4effect.o: fp4effect.cpp fp4effect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fp4effect.o fp4effect.cpp

fp4instr.o: fp4instr.cpp fp4instr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fp4instr.o fp4instr.cpp

fp4hw.o: fp4hw.cpp fp4hw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fp4hw.o fp4hw.cpp

instrumentwidget.o: instrumentwidget.cpp instrumentwidget.h \
		fp4instr.h \
		fp4qt.h \
		fp4hw.h \
		preferences.h \
		fp4managerapplication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o instrumentwidget.o instrumentwidget.cpp

controllerwidget.o: controllerwidget.cpp controllerwidget.h \
		window.h \
		fp4managerapplication.h \
		fp4qt.h \
		fp4hw.h \
		fp4controller.h \
		midibindbutton.h \
		musictheory.h \
		parameterswidget.h \
		pedalswidget.h \
		abstractcontrollerswidget.h \
		soundparameterswidget.h \
		vibratowidget.h \
		portamentowidget.h \
		sendswidget.h \
		pitchwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controllerwidget.o controllerwidget.cpp

fp4qt.o: fp4qt.cpp fp4qt.h \
		fp4hw.h \
		controllerbinding.h \
		channeltransform.h \
		fp4constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fp4qt.o fp4qt.cpp

fp4controller.o: fp4controller.cpp fp4controller.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fp4controller.o fp4controller.cpp

midibindbutton.o: midibindbutton.cpp midibindbutton.h \
		fp4qt.h \
		fp4hw.h \
		config.h \
		fp4managerapplication.h \
		fp4win.h \
		preferences.h \
		bindingmanagerwidget.h \
		window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o midibindbutton.o midibindbutton.cpp

controllerbinding.o: controllerbinding.cpp controllerbinding.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controllerbinding.o controllerbinding.cpp

autoconnectwidget.o: autoconnectwidget.cpp autoconnectwidget.h \
		window.h \
		fp4hw.h \
		fp4qt.h \
		config.h \
		themeicon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o autoconnectwidget.o autoconnectwidget.cpp

gssendwidget.o: gssendwidget.cpp gssendwidget.h \
		window.h \
		fp4qt.h \
		fp4hw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gssendwidget.o gssendwidget.cpp

bindingmanagerwidget.o: bindingmanagerwidget.cpp bindingmanagerwidget.h \
		fp4qt.h \
		fp4hw.h \
		window.h \
		fp4managerapplication.h \
		themeicon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bindingmanagerwidget.o bindingmanagerwidget.cpp

splitswindow.o: splitswindow.cpp splitswindow.h \
		fp4qt.h \
		fp4hw.h \
		window.h \
		keyboardwidget.h \
		keyboardrangewidget.h \
		musictheory.h \
		channeltransform.h \
		fp4constants.h \
		fp4managerapplication.h \
		themeicon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o splitswindow.o splitswindow.cpp

keyboardwidget.o: keyboardwidget.cpp keyboardwidget.h \
		musictheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keyboardwidget.o keyboardwidget.cpp

keyboardrangewidget.o: keyboardrangewidget.cpp keyboardrangewidget.h \
		keyboardwidget.h \
		musictheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keyboardrangewidget.o keyboardrangewidget.cpp

musictheory.o: musictheory.cpp musictheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o musictheory.o musictheory.cpp

channeltransform.o: channeltransform.cpp channeltransform.h \
		fp4qt.h \
		fp4hw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o channeltransform.o channeltransform.cpp

channelswindow.o: channelswindow.cpp channelswindow.h \
		window.h \
		instrumentwidget.h \
		controllergeneratorwindow.h \
		fp4qt.h \
		fp4hw.h \
		fp4instr.h \
		midibindbutton.h \
		config.h \
		musictheory.h \
		instrumentselectdialog.h \
		controllerwidget.h \
		fp4managerapplication.h \
		effectwidget.h \
		parameterswidget.h \
		fp4effect.h \
		fp4constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o channelswindow.o channelswindow.cpp

controllergeneratorwindow.o: controllergeneratorwindow.cpp controllergeneratorwindow.h \
		window.h \
		musictheory.h \
		config.h \
		fp4qt.h \
		fp4hw.h \
		fp4constants.h \
		channelpressuregenerator.h \
		controllergenerator.h \
		controllerkeysgenerator.h \
		keytimegenerator.h \
		voicinggenerator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controllergeneratorwindow.o controllergeneratorwindow.cpp

fp4managerapplication.o: fp4managerapplication.cpp fp4managerapplication.h \
		fp4win.h \
		preferences.h \
		config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fp4managerapplication.o fp4managerapplication.cpp

performancewindow.o: performancewindow.cpp performancewindow.h \
		window.h \
		fp4win.h \
		preferences.h \
		midibindbutton.h \
		config.h \
		fp4managerapplication.h \
		themeicon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o performancewindow.o performancewindow.cpp

keyboardrangeeditdialog.o: keyboardrangeeditdialog.cpp keyboardrangeeditdialog.h \
		keyboardwidget.h \
		keyboardrangewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keyboardrangeeditdialog.o keyboardrangeeditdialog.cpp

instrumentselectdialog.o: instrumentselectdialog.cpp instrumentselectdialog.h \
		instrumentwidget.h \
		fp4qt.h \
		fp4hw.h \
		config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o instrumentselectdialog.o instrumentselectdialog.cpp

window.o: window.cpp window.h \
		config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o window.o window.cpp

preferences.o: preferences.cpp preferences.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o preferences.o preferences.cpp

preferenceswindow.o: preferenceswindow.cpp preferenceswindow.h \
		window.h \
		fp4win.h \
		preferences.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o preferenceswindow.o preferenceswindow.cpp

themeicon.o: themeicon.cpp themeicon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o themeicon.o themeicon.cpp

resetbutton.o: resetbutton.cpp resetbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o resetbutton.o resetbutton.cpp

reverbwidget.o: reverbwidget.cpp reverbwidget.h \
		parameterswidget.h \
		fp4qt.h \
		fp4hw.h \
		fp4effect.h \
		fp4managerapplication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reverbwidget.o reverbwidget.cpp

parameterswidget.o: parameterswidget.cpp parameterswidget.h \
		parameterwidgetbuilder.h \
		fp4effect.h \
		config.h \
		window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parameterswidget.o parameterswidget.cpp

choruswidget.o: choruswidget.cpp choruswidget.h \
		parameterswidget.h \
		fp4effect.h \
		fp4managerapplication.h \
		fp4qt.h \
		fp4hw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o choruswidget.o choruswidget.cpp

parameterwidgetbuilder.o: parameterwidgetbuilder.cpp parameterwidgetbuilder.h \
		fp4effect.h \
		midibindbutton.h \
		resetbutton.h \
		fp4managerapplication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parameterwidgetbuilder.o parameterwidgetbuilder.cpp

effectwidget.o: effectwidget.cpp effectwidget.h \
		parameterswidget.h \
		fp4effect.h \
		fp4managerapplication.h \
		fp4qt.h \
		fp4hw.h \
		channelswindow.h \
		window.h \
		fp4fxlist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o effectwidget.o effectwidget.cpp

masterwidget.o: masterwidget.cpp masterwidget.h \
		parameterswidget.h \
		fp4effect.h \
		fp4managerapplication.h \
		fp4qt.h \
		fp4hw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o masterwidget.o masterwidget.cpp

abstractcontrollerswidget.o: abstractcontrollerswidget.cpp abstractcontrollerswidget.h \
		parameterswidget.h \
		fp4managerapplication.h \
		fp4qt.h \
		fp4hw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o abstractcontrollerswidget.o abstractcontrollerswidget.cpp

pedalswidget.o: pedalswidget.cpp pedalswidget.h \
		abstractcontrollerswidget.h \
		parameterswidget.h \
		fp4effect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pedalswidget.o pedalswidget.cpp

soundparameterswidget.o: soundparameterswidget.cpp soundparameterswidget.h \
		abstractcontrollerswidget.h \
		parameterswidget.h \
		fp4effect.h \
		fp4managerapplication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o soundparameterswidget.o soundparameterswidget.cpp

vibratowidget.o: vibratowidget.cpp vibratowidget.h \
		abstractcontrollerswidget.h \
		parameterswidget.h \
		fp4effect.h \
		fp4managerapplication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vibratowidget.o vibratowidget.cpp

portamentowidget.o: portamentowidget.cpp portamentowidget.h \
		abstractcontrollerswidget.h \
		parameterswidget.h \
		fp4effect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o portamentowidget.o portamentowidget.cpp

sendswidget.o: sendswidget.cpp sendswidget.h \
		abstractcontrollerswidget.h \
		parameterswidget.h \
		fp4effect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sendswidget.o sendswidget.cpp

pitchwidget.o: pitchwidget.cpp pitchwidget.h \
		parameterswidget.h \
		fp4effect.h \
		fp4managerapplication.h \
		fp4qt.h \
		fp4hw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pitchwidget.o pitchwidget.cpp

channelpressuregenerator.o: channelpressuregenerator.cpp channelpressuregenerator.h \
		controllergenerator.h \
		fp4qt.h \
		fp4hw.h \
		config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o channelpressuregenerator.o channelpressuregenerator.cpp

controllergenerator.o: controllergenerator.cpp controllergenerator.h \
		fp4qt.h \
		fp4hw.h \
		midibindbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controllergenerator.o controllergenerator.cpp

controllerkeysgenerator.o: controllerkeysgenerator.cpp controllerkeysgenerator.h \
		controllergenerator.h \
		fp4qt.h \
		fp4hw.h \
		keyboardwidget.h \
		keyboardrangeeditdialog.h \
		fp4constants.h \
		musictheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controllerkeysgenerator.o controllerkeysgenerator.cpp

keytimegenerator.o: keytimegenerator.cpp keytimegenerator.h \
		controllergenerator.h \
		fp4qt.h \
		fp4hw.h \
		config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keytimegenerator.o keytimegenerator.cpp

voicinggenerator.o: voicinggenerator.cpp voicinggenerator.h \
		controllergenerator.h \
		chordselecterdialog.h \
		fp4qt.h \
		fp4hw.h \
		musictheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o voicinggenerator.o voicinggenerator.cpp

chordselecterdialog.o: chordselecterdialog.cpp chordselecterdialog.h \
		keyboardwidget.h \
		fp4managerapplication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o chordselecterdialog.o chordselecterdialog.cpp

moc_fp4win.o: moc_fp4win.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fp4win.o moc_fp4win.cpp

moc_instrumentwidget.o: moc_instrumentwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_instrumentwidget.o moc_instrumentwidget.cpp

moc_controllerwidget.o: moc_controllerwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_controllerwidget.o moc_controllerwidget.cpp

moc_fp4qt.o: moc_fp4qt.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fp4qt.o moc_fp4qt.cpp

moc_midibindbutton.o: moc_midibindbutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_midibindbutton.o moc_midibindbutton.cpp

moc_autoconnectwidget.o: moc_autoconnectwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_autoconnectwidget.o moc_autoconnectwidget.cpp

moc_gssendwidget.o: moc_gssendwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gssendwidget.o moc_gssendwidget.cpp

moc_bindingmanagerwidget.o: moc_bindingmanagerwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bindingmanagerwidget.o moc_bindingmanagerwidget.cpp

moc_splitswindow.o: moc_splitswindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_splitswindow.o moc_splitswindow.cpp

moc_keyboardwidget.o: moc_keyboardwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_keyboardwidget.o moc_keyboardwidget.cpp

moc_keyboardrangewidget.o: moc_keyboardrangewidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_keyboardrangewidget.o moc_keyboardrangewidget.cpp

moc_channeltransform.o: moc_channeltransform.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_channeltransform.o moc_channeltransform.cpp

moc_channelswindow.o: moc_channelswindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_channelswindow.o moc_channelswindow.cpp

moc_controllergeneratorwindow.o: moc_controllergeneratorwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_controllergeneratorwindow.o moc_controllergeneratorwindow.cpp

moc_fp4managerapplication.o: moc_fp4managerapplication.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fp4managerapplication.o moc_fp4managerapplication.cpp

moc_performancewindow.o: moc_performancewindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_performancewindow.o moc_performancewindow.cpp

moc_keyboardrangeeditdialog.o: moc_keyboardrangeeditdialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_keyboardrangeeditdialog.o moc_keyboardrangeeditdialog.cpp

moc_instrumentselectdialog.o: moc_instrumentselectdialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_instrumentselectdialog.o moc_instrumentselectdialog.cpp

moc_window.o: moc_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_window.o moc_window.cpp

moc_preferences.o: moc_preferences.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_preferences.o moc_preferences.cpp

moc_preferenceswindow.o: moc_preferenceswindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_preferenceswindow.o moc_preferenceswindow.cpp

moc_resetbutton.o: moc_resetbutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_resetbutton.o moc_resetbutton.cpp

moc_reverbwidget.o: moc_reverbwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_reverbwidget.o moc_reverbwidget.cpp

moc_parameterswidget.o: moc_parameterswidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_parameterswidget.o moc_parameterswidget.cpp

moc_choruswidget.o: moc_choruswidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_choruswidget.o moc_choruswidget.cpp

moc_effectwidget.o: moc_effectwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_effectwidget.o moc_effectwidget.cpp

moc_masterwidget.o: moc_masterwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_masterwidget.o moc_masterwidget.cpp

moc_abstractcontrollerswidget.o: moc_abstractcontrollerswidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_abstractcontrollerswidget.o moc_abstractcontrollerswidget.cpp

moc_pedalswidget.o: moc_pedalswidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_pedalswidget.o moc_pedalswidget.cpp

moc_soundparameterswidget.o: moc_soundparameterswidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_soundparameterswidget.o moc_soundparameterswidget.cpp

moc_vibratowidget.o: moc_vibratowidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_vibratowidget.o moc_vibratowidget.cpp

moc_portamentowidget.o: moc_portamentowidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_portamentowidget.o moc_portamentowidget.cpp

moc_sendswidget.o: moc_sendswidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sendswidget.o moc_sendswidget.cpp

moc_pitchwidget.o: moc_pitchwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_pitchwidget.o moc_pitchwidget.cpp

moc_channelpressuregenerator.o: moc_channelpressuregenerator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_channelpressuregenerator.o moc_channelpressuregenerator.cpp

moc_controllergenerator.o: moc_controllergenerator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_controllergenerator.o moc_controllergenerator.cpp

moc_controllerkeysgenerator.o: moc_controllerkeysgenerator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_controllerkeysgenerator.o moc_controllerkeysgenerator.cpp

moc_keytimegenerator.o: moc_keytimegenerator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_keytimegenerator.o moc_keytimegenerator.cpp

moc_voicinggenerator.o: moc_voicinggenerator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_voicinggenerator.o moc_voicinggenerator.cpp

moc_chordselecterdialog.o: moc_chordselecterdialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_chordselecterdialog.o moc_chordselecterdialog.cpp

qrc_resources.o: qrc_resources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_resources.o qrc_resources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

